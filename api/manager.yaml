openapi: 3.0.1
info:
  contact:
    email: hello@wordlift.io
    name: WordLift
    url: https://wordlift.io
  description: Subscription management and related services.
  license:
    name: (c) copyright 2022-present WordLift
    url: https://wordlift.io
  termsOfService: https://wordlift.io/terms-of-service/
  title: Manager
  version: "1.0"
servers:
- url: https://api.wordlift.io
tags:
- description: Manage Custom Domains
  name: Custom Domains
- description: Retrieve Add-ons data
  name: AddOns
- description: Data URI for a Web page URL.
  name: Data URI
- description: Quickly Retrieve entities and their Structured Data.
  name: Entities
- description: Access Google Search Console data
  name: Google Search Console
- description: Manage Google Merchants
  name: Google Merchants
- description: Manage redeem codes.
  name: Redeem Codes
- description: The list of included or excluded URLs from the WordPress configuration
  name: Include Excludes (WordPress plugin)
- description: Manage Accounts
  name: Accounts
- description: Manage Merchants
  name: Merchants
- description: Synchronize Products from the Merchant Feed
  name: Merchant Syncs
paths:
  /accounts:
    get:
      description: List the accounts
      operationId: listAccounts
      parameters:
      - description: The cursor
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - in: query
        name: limit
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - in: query
        name: can_content_generation
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/vnd.wordlift.accounts+json;version=1:
              schema:
                $ref: '#/components/schemas/PageActiveAccount'
          description: Found
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: List
      tags:
      - Accounts
  /accounts/me/include-excludes:
    get:
      description: List the include and exclude configurations.
      operationId: listIncludeExcludes
      parameters:
      - in: query
        name: account
        required: true
        schema:
          $ref: '#/components/schemas/Account'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Success
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Not Found
      summary: List
      tags:
      - Include Excludes (WordPress plugin)
    put:
      description: Update the include and exclude configurations.
      operationId: updateIncludeExcludes
      parameters:
      - in: query
        name: account
        required: true
        schema:
          $ref: '#/components/schemas/Account'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IncludeExcludeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Success
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncludeExclude'
          description: Not Found
      summary: Update
      tags:
      - Include Excludes (WordPress plugin)
  /addon/configurations:
    get:
      description: List the Add-ons configurations
      operationId: listConfigurations
      parameters:
      - description: The access token
        in: query
        name: token
        required: false
        schema:
          type: string
      - description: The key
        in: query
        name: key
        required: false
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAddOnConfiguration'
          description: Found
        "401":
          description: Authentication Failure
      summary: List
      tags:
      - AddOns
  /data-uri:
    get:
      description: |
        The service will return a Web Data URI only for existing datasets. The Web Data URI is not guaranteed to exist (i.e. it may return 404).
      operationId: get
      parameters:
      - description: The Web Page URL.
        in: query
        name: u
        required: true
        schema:
          type: string
          format: url
      responses:
        "303":
          description: See Other
          headers:
            Location:
              description: "${api.data-uri-controller.get.headers.location.description}"
              schema: {}
              style: simple
      summary: Get the Web Data URI for a Web Page URL.
      tags:
      - Data URI
  /entities:
    get:
      description: List the Entities
      operationId: listEntities
      parameters:
      - description: The dataset URI to search
        in: query
        name: dataset_uri_in
        required: true
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
        style: form
      - description: The name regex
        in: query
        name: name_match
        required: true
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      - description: "The sorting, only `+name` is supported"
        in: query
        name: sort
        required: false
        schema:
          type: string
          default: +name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Found
        "401":
          description: Authentication Failure
      security:
      - ApiKey: []
      summary: List
      tags:
      - Entities
  /ext/google/searchconsole/searches:
    get:
      description: List the Website Search performance data
      operationId: listWebsiteSearch
      parameters:
      - description: The website URL
        in: query
        name: website
        required: true
        schema:
          type: string
      - description: The cursor
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: "The start date, inclusive, in yyyy-MM-dd format."
        in: query
        name: since
        required: true
        schema:
          type: string
      - description: "The end date, inclusive, in yyyy-MM-dd format."
        in: query
        name: until
        required: true
        schema:
          type: string
      - description: "The dimensions, e.g. `query`, `page`. Must repeat for each dimension."
        in: query
        name: dimensions
        required: true
        schema:
          type: array
          items:
            type: string
        style: form
      - description: "The Google access token, must have access to the Google Search\
          \ Console scope"
        in: query
        name: google_access_token
        required: true
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageWebsiteSearch'
          description: Found
        "401":
          description: Authentication Failure
      summary: List Website Search data
      tags:
      - Google Search Console
  /ext/google/searchconsole/websites:
    get:
      description: List the Websites
      operationId: listWebsites
      parameters:
      - description: "The Google access token, must have access to the Google Search\
          \ Console scope"
        in: query
        name: google_access_token
        required: true
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageWebsite'
          description: Found
        "401":
          description: Authentication Failure
      summary: List
      tags:
      - Google Search Console
  /ext/google/shopping/merchants:
    get:
      description: List the Google Merchants
      operationId: listGoogleMerchants
      parameters:
      - in: query
        name: google_access_token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMerchantEntry'
          description: Found
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: List
      tags:
      - Google Merchants
  /merchants:
    get:
      description: "List the Merchants, optionally filtering by the `deleted` flag"
      operationId: listMerchants
      parameters:
      - description: The cursor
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      - description: Filter by the `deleted` flag
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMerchantView'
          description: Found
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: List
      tags:
      - Merchants
    post:
      description: Create a Merchant
      operationId: createMerchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Success
        "401":
          description: Authentication Failure
        "404":
          description: Not Found
      security:
      - OAuth2: []
      summary: Create
      tags:
      - Merchants
  /merchants/{id}:
    delete:
      description: Delete a Merchant by its `id`.
      operationId: deleteMerchant
      parameters:
      - description: The Merchant id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Deleted
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: Delete by id
      tags:
      - Merchants
    get:
      description: Get a Merchant by its `id`.
      operationId: getMerchant
      parameters:
      - description: The Merchant id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Success
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: Get by id
      tags:
      - Merchants
    put:
      description: Update a Merchant
      operationId: updateMerchant
      parameters:
      - description: The Merchant id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Success
        "401":
          description: Authentication Failure
        "404":
          description: Not Found
      security:
      - OAuth2: []
      summary: Update
      tags:
      - Merchants
  /merchants/{merchantId}/syncs:
    get:
      description: List the Merchants Syncs
      operationId: listMerchantSyncs
      parameters:
      - description: The Merchant's `id`
        in: path
        name: merchantId
        required: true
        schema:
          type: integer
          format: int64
      - description: The cursor
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The maximum number of results
        in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 10
      - description: "The sorting, `+id` or `-id`"
        in: query
        name: sort
        required: false
        schema:
          type: string
          default: +id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMerchantSync'
          description: Found
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: List
      tags:
      - Merchant Syncs
    post:
      operationId: createSync
      parameters:
      - description: The Merchant's `id`
        in: path
        name: merchantId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MerchantSync'
          description: Found.
        "401":
          description: Authentication Failure
      security:
      - OAuth2: []
      summary: Start
      tags:
      - Merchant Syncs
  /merchants/{merchantId}/syncs/{id}:
    get:
      operationId: getMerchantSync
      parameters:
      - description: The Merchant's `id`
        in: path
        name: merchantId
        required: true
        schema:
          type: integer
          format: int64
      - description: The Merchant Sync `id`.
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSync'
          description: Found.
        "401":
          description: Authentication Failure
        "404":
          description: Not Found
      security:
      - OAuth2: []
      summary: Get by id
      tags:
      - Merchant Syncs
  /redeem-codes:
    post:
      operationId: redeemCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Found.
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found.
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Code already redeemed.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Configuration error.
      summary: Redeem the provided code and get a key
      tags:
      - Redeem Codes
  /validations:
    post:
      description: Check if the provided custom domain can be set for the account
      operationId: validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainValidationRequest'
        required: true
      responses:
        "200":
          content:
            application/vnd.wordlift.custom-domain-validation+json;version-1: {}
          description: Success
        "401":
          description: Authentication Failure
        "404":
          description: Not Found
      security:
      - OAuth2: []
      summary: Validate
      tags:
      - Custom Domains
components:
  schemas:
    Account:
      type: object
      properties:
        analyzerId:
          type: integer
          format: int64
        country:
          type: string
        datasetId:
          type: string
          deprecated: true
        domainUri:
          type: string
        id:
          type: integer
          format: int64
        indexed:
          type: boolean
        key:
          type: string
        language:
          type: string
        ngDatasetId:
          type: string
        resolvedUrl:
          type: string
        subscriptionId:
          type: integer
          format: int64
        url:
          type: string
        wpAdmin:
          type: string
        wpJson:
          type: string
        wp_include_exclude_default:
          type: string
    ActiveAccount:
      type: object
      description: An array of objects.
      properties:
        country:
          type: string
        domain_uri:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        language:
          type: string
        ng_dataset_id:
          type: string
        package_type:
          type: string
        subscription_id:
          type: integer
          format: int64
        url:
          type: string
        user_id:
          type: integer
          format: int64
        wp_admin:
          type: string
        wp_include_exclude_default:
          type: string
        wp_json:
          type: string
    AddOnConfiguration:
      type: object
      description: An Add-On configuration
      properties:
        can_do_content_expansion:
          type: boolean
          description: Whether this Add-on can do content expansion
          readOnly: true
        can_import_to_wordpress:
          type: boolean
          description: Whether this Add-on can import to WordPress.
          readOnly: true
        key:
          type: string
          description: A key
          readOnly: true
        wp_admin:
          type: string
          description: The wp-admin endpoint for a website using the key.
          readOnly: true
        wp_json:
          type: string
          description: The wp-json endpoint for a website using the key.
          readOnly: true
    DomainValidationRequest:
      type: object
      properties:
        dataset_domain:
          type: string
          description: "The dataset domain, e.g. data.example.org"
        dataset_name:
          type: string
          description: "The dataset name, e.g. my-dataset-name"
      required:
      - dataset_domain
      - dataset_name
    Entity:
      type: object
      description: An array of objects.
      properties:
        structured_data:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    IncludeExclude:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
          readOnly: true
          title: Account unique identifier
        flag:
          type: string
          description: A flag which determines whether the URL is `INCLUDE` or `EXCLUDE`.
          enum:
          - INCLUDE
          - EXCLUDE
          title: Include or Exclude
        id:
          type: integer
          format: int64
          readOnly: true
          title: Unique identifier
        url:
          type: string
          title: The URL
      required:
      - account_id
      - flag
      - url
    IncludeExcludeRequest:
      type: object
      description: A request to create an IncludeExclude.
      properties:
        Include or Exclude:
          type: string
          description: A flag which determines whether the URL is `INCLUDE` or `EXCLUDE`.
          enum:
          - INCLUDE
          - EXCLUDE
        The URL:
          type: string
      required:
      - Include or Exclude
      - The URL
    Merchant:
      type: object
      description: A Merchant project.
      properties:
        access_token:
          type: string
          description: The Google merchant access token
        account_id:
          type: integer
          format: int64
          description: The account id
          readOnly: true
        automatic_synchronization:
          type: boolean
          description: Whether the Merchant data will be synchronized automatically
        created_at:
          type: string
          format: date-time
          description: The create date-time
          readOnly: true
        dataset_domain:
          type: string
          description: The custom domain (for example data.example.org)
        dataset_name:
          type: string
          description: The dataset path (for example /data)
        deleted:
          type: boolean
          default: false
          description: True if the merchant has been deleted
        deleted_at:
          type: string
          format: date-time
          description: The delete date-time
          readOnly: true
        google_merchant_id:
          type: integer
          format: int64
          description: The Google Merchant id
        id:
          type: integer
          format: int64
          description: The unique id
          readOnly: true
        modified_at:
          type: string
          format: date-time
          description: The last modified date-time
          readOnly: true
        publisher_name:
          type: string
          description: The publisher name (shows in schema publisher)
        refresh_token:
          type: string
          description: The Google merchant refresh token
        url:
          type: string
          description: The website URL
      required:
      - access_token
      - deleted
      - google_merchant_id
      - publisher_name
      - refresh_token
    MerchantEntry:
      type: object
      description: A Merchant Entry with the Google Merchant Id and the Website URL
      properties:
        google_merchant_id:
          type: integer
          format: int64
          description: The Google Merchant id
        website_url:
          type: string
          description: The Google Merchant Website URL
      required:
      - google_merchant_id
      - website_url
    MerchantSync:
      type: object
      description: A Merchant products data synchronization.
      properties:
        created_at:
          type: string
          format: date-time
          description: The create date-time.
          readOnly: true
        has_errors:
          type: boolean
          description: Whether the sync encountered errors.
          readOnly: true
        id:
          type: integer
          format: int64
          description: The unique id.
          readOnly: true
        merchant_id:
          type: integer
          format: int64
          description: The parent Merchant id.
          readOnly: true
        modified_at:
          type: string
          format: date-time
          description: The last modified date-time.
          readOnly: true
        products_created:
          type: integer
          format: int32
          description: The number of created products
          readOnly: true
        products_deleted:
          type: integer
          format: int32
          description: The number of deleted products
          readOnly: true
        products_errored:
          type: integer
          format: int32
          description: The number of errored products
          readOnly: true
        products_skipped:
          type: integer
          format: int32
          description: The number of skipped products
          readOnly: true
        products_total:
          type: integer
          format: int32
          description: "The total number of processed products, including the skipped\
            \ and errored."
          readOnly: true
        products_updated:
          type: integer
          format: int32
          description: The number of update products
          readOnly: true
        started_at:
          type: string
          format: date-time
          description: The started date-time.
          readOnly: true
        stopped_at:
          type: string
          format: date-time
          description: The stopped date-time.
          readOnly: true
      required:
      - merchant_id
    MerchantView:
      type: object
      description: An array of objects.
      properties:
        access_token:
          type: string
          description: The Google merchant access token
        account_id:
          type: integer
          format: int64
          description: The account id
          readOnly: true
        automatic_synchronization:
          type: boolean
          description: Whether the Merchant data will be synchronized automatically
        created_at:
          type: string
          format: date-time
          description: The create date-time
          readOnly: true
        dataset_domain:
          type: string
          description: The custom domain (for example data.example.org)
        dataset_name:
          type: string
          description: The dataset path (for example /data)
        deleted:
          type: boolean
          default: false
          description: True if the merchant has been deleted
        deleted_at:
          type: string
          format: date-time
          description: The delete date-time
          readOnly: true
        google_merchant_id:
          type: integer
          format: int64
          description: The Google Merchant id
        id:
          type: integer
          format: int64
          description: The unique id
          readOnly: true
        modified_at:
          type: string
          format: date-time
          description: The last modified date-time
          readOnly: true
        publisher_name:
          type: string
          description: The publisher name (shows in schema publisher)
        refresh_token:
          type: string
          description: The Google merchant refresh token
        sid:
          type: string
        sync_has_errors:
          type: boolean
        sync_id:
          type: integer
          format: int64
        sync_products_created:
          type: integer
          format: int32
        sync_products_deleted:
          type: integer
          format: int32
        sync_products_errored:
          type: integer
          format: int32
        sync_products_skipped:
          type: integer
          format: int32
        sync_products_total:
          type: integer
          format: int32
        sync_products_updated:
          type: integer
          format: int32
        sync_started_at:
          type: string
          format: date-time
          description: The started date-time.
          readOnly: true
        sync_stopped_at:
          type: string
          format: date-time
          description: The stopped date-time.
          readOnly: true
        url:
          type: string
          description: The website URL
      required:
      - access_token
      - deleted
      - google_merchant_id
      - publisher_name
      - refresh_token
    PageActiveAccount:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/ActiveAccount'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageAddOnConfiguration:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/AddOnConfiguration'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageEntity:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/Entity'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageMerchantEntry:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/MerchantEntry'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageMerchantSync:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/MerchantSync'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageMerchantView:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/MerchantView'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageWebsite:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/Website'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    PageWebsiteSearch:
      type: object
      description: A page object with links to move to other pages and the list of
        objects.
      properties:
        first:
          type: string
          description: The link to the first page.
          nullable: true
        items:
          type: array
          description: An array of objects.
          items:
            $ref: '#/components/schemas/WebsiteSearch'
        last:
          type: string
          description: The link to the last page.
          nullable: true
        next:
          type: string
          description: The link to the next page or `null` if there's no page.
          nullable: true
        prev:
          type: string
          description: The link to the previous page or `null` if there's no page.
          nullable: true
        self:
          type: string
          description: The link to the current page.
          nullable: true
      required:
      - first
      - items
      - last
      - next
      - prev
      - self
    Problem:
      type: object
      properties:
        detail:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: '#/components/schemas/StatusType'
        title:
          type: string
        type:
          type: string
          format: uri
    Request:
      type: object
      description: The Merchant request
      properties:
        access_token:
          type: string
          description: Google Merchant access token
        dataset_domain:
          type: string
          description: The custom domain (for example data.example.org)
        dataset_name:
          type: string
          description: The dataset path (for example "data")
        deleted:
          type: boolean
          default: false
          description: True if the merchant has been deleted
        google_merchant_id:
          type: integer
          format: int64
          description: The Google Merchant id
        publisher_name:
          type: string
          description: The publisher name (shows in schema publisher)
        refresh_token:
          type: string
          description: Google Merchant refresh token
        url:
          type: string
          description: The website URL
      required:
      - google_merchant_id
      - publisher_name
      - refresh_token
      - url
    Response:
      type: object
      properties:
        key:
          type: string
    StatusType:
      type: object
      properties:
        reasonPhrase:
          type: string
        statusCode:
          type: integer
          format: int32
    Website:
      type: object
      description: A Website
      properties:
        url:
          type: string
          description: "The Website URL, it may also start with thew `sc-domain:`\
            \ prefix."
      required:
      - url
    WebsiteSearch:
      type: object
      description: Search Data
      properties:
        clicks:
          type: integer
          format: int32
          description: Number of clicks.
        ctr:
          type: number
          format: double
          description: CTR.
        id:
          type: integer
          format: int64
          description: "The id: it's now a unique id, but a row index."
        impressions:
          type: integer
          format: int32
          description: Number of impressions.
        keys:
          type: array
          description: "The keys for the current data, matching the provided `dimensions`\
            \ in the query."
          items:
            type: string
            description: "The keys for the current data, matching the provided `dimensions`\
              \ in the query."
        position:
          type: number
          format: double
          description: Position.
        score:
          type: number
          format: double
          description: "A score to spot traffic opportunities, from 0.0 to 1.0 (the\
            \ higher the better). The score is based on the traffic data."
      required:
      - clicks
      - ctr
      - id
      - impressions
      - keys
      - position
      - score
  securitySchemes:
    ApiKey:
      description: "`Key {your key}`"
      in: header
      name: Authorization
      type: apiKey
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://s.wordlift.io/oauth/authorize/
          scopes:
            basic: basic scope
          tokenUrl: https://s.wordlift.io/oauth/token/
      type: oauth2
